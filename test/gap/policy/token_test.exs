defmodule Gap.Policy.TokenTest do
  use ExUnit.Case, async: true

  alias Gap.Policy.Token

  describe "create_token/0 and is_token/1 black-box behavior" do
    test "create_token produces a valid token string" do
      token = Token.create_token()

      assert is_binary(token)
      assert String.contains?(token, ":")
      # Just check token length reasonable (min length > 20 to avoid empty tokens)
      assert byte_size(token) > 20
    end

    test "is_token returns true for token generated by create_token" do
      token = Token.create_token()
      assert Token.is_token(token)
    end

    test "is_token returns false for invalid tokens" do
      assert Token.is_token("") == false
      assert Token.is_token("randomstring") == false
      assert Token.is_token("something:wrongformat") == false
      assert Token.is_token("prefix:12345") == false
    end
  end
end
